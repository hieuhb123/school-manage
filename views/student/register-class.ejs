<%- include('../partials/header') %>
<style>
    .container{
        padding: 0 0 0 0;
    }
    .bi {
    display: inline-block;
    width: 1rem;
    height: 1rem;
    }

    /*
    * Sidebar
    */

    @media (min-width: 768px) {
    .sidebar .offcanvas-lg {
        position: -webkit-sticky;
        position: sticky;
        top: 48px;
    }
    .navbar-search {
        display: block;
    }
    }

    .sidebar .nav-link {
    font-size: .875rem;
    font-weight: 500;
    }

    .sidebar .nav-link.active {
    color: #2470dc;
    }

    .sidebar-heading {
    font-size: .75rem;
    }

    /*
    * Navbar
    */

    .navbar-brand {
    padding-top: .75rem;
    padding-bottom: .75rem;
    background-color: rgba(0, 0, 0, .25);
    box-shadow: inset -1px 0 0 rgba(0, 0, 0, .25);
    }

    .navbar .form-control {
    padding: .75rem 1rem;
    }

</style>

<div class="container-fluid">
    <div class="row">
        <div class="sidebar border border-right col-md-3 col-lg-2 p-0 bg-body-tertiary">
            <div class="offcanvas-md offcanvas-end bg-body-tertiary" tabindex="-1" id="sidebarMenu" aria-labelledby="sidebarMenuLabel">
                <div class="offcanvas-body d-md-flex flex-column p-0 pt-lg-3 overflow-y-auto">
                    <h6 class="sidebar-heading d-flex justify-content-between align-items-center px-3 mt-2 mb-1 text-body-secondary">
                        <ul class="nav flex-column mb-auto">
                            <li class="my-1">
                                Mã sinh viên: <span class="fw-bold"><%=user.student_id%></span>
                            </li>
                            <li class="my-1">
                                Họ tên sinh viên: <span class="fw-bold"><%=user.student_name%></span>
                            </li>
                            <li class="my-1">
                                Lớp: <span class="fw-bold"><%=user.major%></span>
                            </li>
                            <li class="my-1">
                                Chương trình: <span class="fw-bold"><%=user.institute_id%></span>
                            </li>
                        </ul>
                    </h6>
        
                    <hr class="my-3">
        
                    <ul class="nav flex-column mb-auto">
                        <li class="nav-item">
                            <a class="nav-link d-flex align-items-center gap-2" href="/student/register-class/class-open">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-list" viewBox="0 0 16 16">
                                    <path fill-rule="evenodd" d="M2.5 12a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5m0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5m0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5"/>
                                </svg>
                                Danh sách lớp mở
                            </a>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
  
        <main class="col-md-9 ms-sm-auto col-lg-10 px-md-4">
            
            <div class="justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
                <h1 class="h2">Trang đăng ký học tập</h1>
                <form class="row row-cols-lg-auto g-3 align-items-center">
                    <div class="col-12">
                      <label class="visually-hidden" for="inlineFormInputGroupUsername">Username</label>
                      <div class="input-group">
                        <div class="input-group-text">Nhập mã lớp</div>
                        <input type="text" class="form-control" id="input_class" placeholder="class number">
                      </div>
                    </div>      
                    <div class="col-12">
                      <button type="button" class="btn btn-primary" onclick="insertClass()">Submit</button>
                    </div>
                </form>
                <div id="status_class"></div>
            </div>
            <p id="status"></p>
            <div class="table-responsive small">
                <table id="t1" class="table table-striped-columns table-sm mb-0">
                    <thead>
                        <tr class="table-info">
                            <th scope="col">Mã lớp</th>
                            <th scope="col">Tên lớp</th>
                            <th scope="col">Mã HP</th>
                            <th scope="col">Trạng thái ĐK</th>
                            <th scope="col">TC</th>
                            <th scope="col"></th>
                        </tr>
                    </thead>
                    <tbody id="t1_body">
                    <%for(let i = 0 ; i < class_rg.length ; i++) {%>
                        <tr>
                            <td><%=class_rg[i].clazz_id%></td>
                            <td><%=class_rg[i].subject_name%></td>
                            <td><%=class_rg[i].subject_id%></td>
                            <td><%=class_rg[i].status%></td>
                            <td><%=class_rg[i].credit%></td>
                            <td class="text-center"><input class="form-check-input" type="checkbox"></td>
                        </tr>
                    <%}%>
                    <tr>
                        <td colspan="5" class="text-end">Số tín chỉ đăng ký:</td>
                        <td style="box-shadow: 0 0 0 0;"></td>
                    </tr>
                    </tbody>
                </table>
            </div>
            <div class="container text-end">
                <button type="button" class="btn btn-danger" style="width: auto;" onclick="removeSelectedRows()">Xóa các lớp chọn</button>
            </div>
            
            <div class="container text-center">
                <p>Thời khóa biểu đăng ký</p>
                <div class="table-responsive small">
                    <table id="t2" class="table table-striped-columns table-sm mb-0">
                        <thead>
                            <tr class="table-info">
                                <th scope="col">Thứ</th>
                                <th scope="col">Thời gian</th>
                                <th scope="col">Phòng học</th>
                                <th scope="col">Lớp học</th>
                            </tr>
                        </thead>
                        <tbody id="t2_body">
                        <%for(let i = 0 ; i < class_rg.length ; i++) {%>
                            <tr>
                                <td><%=class_rg[i].dow%></td>
                                <td><%=class_rg[i].start_time + '-' + class_rg[i].finish_time%></td>
                                <td><%=class_rg[i].room%></td>
                                <td><%=class_rg[i].clazz_id%></td>
                            </tr>
                        <%}%>
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="container text-center my-5">
                <button type="button" onclick="submitRegister()" class="btn btn-success" style="width: auto;">Gửi đăng ký</button>
            </div>
            <p id="result"></p>
        </main>
    </div>
</div>

<script>

    function removeSelectedRows() {
        // Lấy tất cả các checkbox được tick trong bảng
        const checkboxes = document.querySelectorAll('#t1 input[type="checkbox"]:checked');
        
        checkboxes.forEach(checkboxe => {
            checkboxe.closest('tr').cells[3].textContent = "Delete";
        });
    }

    function submitRegister() {
        const table = document.getElementById('t1');
        let dataget = [];

        for (let i = 1; i < table.rows.length-1; i++) {
            const cell = {
                class_id: table.rows[i].cells[0].textContent,
                status: table.rows[i].cells[3].textContent
            };
            dataget.push(cell);
        }

        const formData = {
            class_regiter: dataget
        };
        document.getElementById('result').textContent = 'Đã gửi thành công';
        fetch('/student/submitRegister', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(dataget)
        })
        .then(response => {
            if (!response.ok) {
                throw new Error('Network response was not ok');
            }
                return response.json();
        })
        .then(data => {
            const table1 = document.getElementById("t1");
            const table2 = document.getElementById("t2");
            for(let i = 0; i < data.delete_info.length ; i++) {
                for (let j = 1; j < table1.rows.length-1; j++) {
                    if(data.delete_info[i] == table1.rows[j].cells[0].textContent) {
                        table1.rows[j].remove();
                        break;
                    }
                }
                for (let j = 1; j < table2.rows.length; j++) {
                    if(data.delete_info[i] == table2.rows[j].cells[3].textContent) {
                        table2.rows[j].remove();
                        break;
                    }
                }
            }
            for(let i = 0; i < data.insert_info.length ; i++) {
                for (let j = 1; j < table1.rows.length-1; j++) {
                    if(data.insert_info[i] == table1.rows[j].cells[0].textContent) {
                        table1.rows[j].cells[3].textContent = 'Thành công';
                        break;
                    }
                }
            }
        })
        .catch(error => {
            console.error('There was a problem with the fetch operation:', error);
        });
    }

    function insertClass() {
        const input = document.querySelector('#input_class').value;
        const formData = {
            class_id: input
        };
        fetch('/student/getClass', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(formData)
        })
        .then(response => {
            if (!response.ok) {
                throw new Error('Network response was not ok');
            }
                return response.json();
        })
        .then(data => {
            var msg = data.message;
            var data = data.data;
            let check_class=0;
                const table1 = document.getElementById('t1');
                for (let i = 1; i < table1.rows.length-1; i++) {
                    console.log(table1.rows[i]);
                    if(data.subject_id == table1.rows[i].cells[2].textContent) {
                        check_class = 1;
                        break;
                    }
                }
                if(check_class == 1)
                    document.querySelector('#status_class').textContent = "Học phần đã tồn tại " + data.subject_id;
                else {
                    const table2 = document.getElementById('t2');
                    for (let i = 1; i < table2.rows.length; i++) {
                        if(data.dow == table2.rows[i].cells[0].textContent) {
                            if(isOverlap(table2.rows[i].cells[1].textContent, data.start_time+ '-' +data.finish_time)) {
                                check_class = 2;
                                document.querySelector('#status_class').textContent = `Lớp ${data.clazz_id} trùng thời gian với ${table2.rows[i].cells[3].textContent} giờ ${data.start_time+ '-' +data.finish_time} ~ ${table2.rows[i].cells[1].textContent}`;
                                break;
                            }
                        }
                    }
                }
                if(check_class == 0) {
                    const tableBody1 = document.getElementById("t1_body");
                    const tableBody2 = document.getElementById("t2_body");

                    const newRow_t1 = `
                            <tr>
                                <td>${data.clazz_id}</td>
                                <td>${data.subject_name}</td>
                                <td>${data.subject_id}</td>
                                <td>${data.status}</td>
                                <td>${data.credit}</td>
                                <td class="text-center"><input class="form-check-input" type="checkbox"></td>
                            </tr>
                        `;
                    const newRow_t2 = `
                        <tr>
                            <th scope="col">${data.dow}</th>
                            <th scope="col">${data.start_time+ '-' +data.finish_time}</th>
                            <th scope="col">${data.room}</th>
                            <th scope="col">${data.clazz_id}</th>
                        </tr>
                        `;
                    tableBody1.innerHTML = newRow_t1 + tableBody1.innerHTML;
                    tableBody2.innerHTML = newRow_t2 + tableBody2.innerHTML;
                    document.querySelector('#status_class').textContent = msg;
                }
        })
        .catch(error => {
            console.error('There was a problem with the fetch operation:', error);
        });
    }
    function parseTime(timeStr) {
    const [hours, minutes, seconds] = timeStr.split(':').map(Number);
    return hours * 3600 + minutes * 60 + seconds; // Tính tổng số giây
    }

    function isOverlap(timeRange1, timeRange2) {
    const [start1, end1] = timeRange1.split('-').map(parseTime);
    const [start2, end2] = timeRange2.split('-').map(parseTime);

    return start1 < end2 && start2 < end1;
    }
</script>

<%- include('../partials/footer') %>